Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pymysql.cursors\r\n\r\nimport os\r\nfrom flask import Flask, request, render_template, redirect, url_for, abort, flash\r\nfrom flask import session, g\r\n\r\napp = Flask(__name__)\r\napp.secret_key = 'une cle(token) : grain de sel(any random string)'\r\ndef get_db():\r\n\r\n    if 'db' not in g:\r\n        g.db = pymysql.connect(\r\n            host=\"localhost\",\r\n            user='mrose',\r\n            password='mdp',\r\n            database='BDD_mrose',\r\n            charset=\"utf8mb4\",\r\n            cursorclass=pymysql.cursors.DictCursor\r\n        )\r\n    return g.db\r\n\r\n@app.teardown_appcontext\r\ndef teardown_db(exception):\r\n    db = g.pop('db', None)\r\n    if db is not None:\r\n        db.close()\r\n\r\n\r\n@app.teardown_appcontext\r\ndef teardown_db(exception):\r\n    db = g.pop('db', None)\r\n    if db is not None:\r\n        db.close()\r\n\r\n\r\n\r\n@app.route('/')\r\ndef show_accueil():\r\n    return render_template('layout.html')\r\n\r\n\r\n########COLLECTE#########\r\n\r\n@app.route('/collecte/show')\r\ndef show_collecte():\r\n    mycursor = get_db().cursor()\r\n    sql=''' SELECT id_collecte AS id, id_type_dechet AS type, quantite_dechet_collecte AS quantite, id_centre_collecte AS centre, id_tournee AS tournee\r\n    FROM Collecte'''\r\n    mycursor.execute(sql)\r\n    Collecte = mycursor.fetchall()\r\n    sql=''' SELECT lieu_collecte AS lieu , id_centre_collecte as id\r\n    FROM Centre_collecte'''\r\n    mycursor.execute(sql)\r\n    Centre_collecte = mycursor.fetchall()\r\n    sql = ''' SELECT libelle_type_dechet AS libelle , id_type_dechet as id\r\n        FROM type_dechet'''\r\n    mycursor.execute(sql)\r\n    type_dechet = mycursor.fetchall()\r\n\r\n    sql = ''' SELECT date_tournee AS date , id_tournee as id\r\n            FROM Tournee'''\r\n    mycursor.execute(sql)\r\n    Tournee = mycursor.fetchall()\r\n    return render_template('collecte/show_collecte.html', collecte=Collecte , centreCollect=Centre_collecte, typeDechet=type_dechet, tournee= Tournee)\r\n\r\n\r\n@app.route('/collecte/add', methods=['GET'])\r\ndef add_collecte():\r\n    print('''affichage du formulaire pour saisir une collecte''')\r\n    mycursor = get_db().cursor()\r\n    sql = ''' SELECT lieu_collecte AS lieu , id_centre_collecte as id\r\n        FROM Centre_collecte'''\r\n    mycursor.execute(sql)\r\n    Centre_collecte = mycursor.fetchall()\r\n    sql = ''' SELECT libelle_type_dechet AS libelle , id_type_dechet as id\r\n        FROM type_dechet'''\r\n    mycursor.execute(sql)\r\n    type_dechet = mycursor.fetchall()\r\n    sql = ''' SELECT date_tournee AS date , id_tournee as id\r\n        FROM Tournee'''\r\n    mycursor.execute(sql)\r\n    Tournee = mycursor.fetchall()\r\n    return render_template('collecte/add_collecte.html', centreCollect=Centre_collecte, typeDechet=type_dechet, tournee=Tournee)\r\n\r\n@app.route('/collecte/delete')\r\ndef delete_collecte():\r\n    print('''suppression d'une collecte''')\r\n    id_collecte = request.args.get('id')\r\n\r\n    if id_collecte:\r\n        try:\r\n            id_collecte = int(id_collecte)\r\n            mycursor = get_db().cursor()\r\n            tuple_param = (id_collecte,)\r\n            sql = \"DELETE FROM Collecte WHERE id_collecte=%s;\"\r\n            mycursor.execute(sql, tuple_param)\r\n            get_db().commit()\r\n\r\n            message = f'info: suppression d\\'une collecte avec - id_collecte =  {id_collecte}'\r\n            flash(message, 'alert-warning')\r\n        except ValueError:\r\n            print(\"L'ID de la collecte n'est pas un entier valide.\")\r\n\r\n    return redirect('/collecte/show')\r\n\r\n@app.route('/collecte/edit', methods=['GET'])\r\ndef edit_collecte():\r\n    print('''affichage du formulaire pour modifier une collecte''')\r\n    print(request.args)\r\n    print(request.args.get('id'))\r\n    id = request.args.get('id')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_collecte AS id, id_type_dechet AS type, quantite_dechet_collecte AS quantite, id_centre_collecte AS centre, id_tournee AS tournee\r\n             FROM Collecte\r\n             WHERE id_collecte=%s;'''\r\n    tuple_param = (id,)\r\n    mycursor.execute(sql, tuple_param)\r\n\r\n    Collecte = mycursor.fetchone()\r\n    print(Collecte)\r\n    sql = '''SELECT id_centre_collecte AS id, lieu_collecte AS lieu\r\n             FROM Centre_collecte'''\r\n    mycursor.execute(sql)\r\n    Centre_collecte = mycursor.fetchall()\r\n    print(Centre_collecte)\r\n    sql = '''SELECT id_type_dechet AS id, libelle_type_dechet AS libelle\r\n             FROM type_dechet'''\r\n    mycursor.execute(sql)\r\n    type_dechet = mycursor.fetchall()\r\n    sql = '''SELECT date_tournee AS date , id_tournee as id\r\n             FROM Tournee'''\r\n    mycursor.execute(sql)\r\n    Tournee = mycursor.fetchall()\r\n    return render_template('collecte/edit_collecte.html', collecte=Collecte, centreCollect=Centre_collecte, typeDechet=type_dechet, tournee=Tournee)\r\n\r\n\r\n@app.route('/collecte/add', methods=['POST'])\r\ndef valid_add_collecte():\r\n    print('''ajout de la collecte dans le tableau''')\r\n    quantite = request.form.get('quantite')\r\n    type_id = request.form.get('type')\r\n    centre_id = request.form.get('centre')\r\n    tournee_id = request.form.get('tournee')\r\n\r\n    mycursor = get_db().cursor()\r\n\r\n    centre_name = get_name_by_id(mycursor, 'Centre_collecte', 'lieu_collecte', centre_id)\r\n    type_name = get_name_by_id(mycursor, 'type_dechet', 'libelle_type_dechet', type_id)\r\n    tournee_date = get_name_by_id(mycursor, 'Tournee', 'date_tournee', tournee_id)\r\n    tournee_date_str = str(tournee_date)\r\n\r\n    message = u'quantite :' + quantite + ' - type : ' + type_name + ' - centre de collecte : ' + centre_name + ' - tournee : ' + tournee_date_str\r\n    print(message)\r\n    flash(message, 'alert-success')\r\n\r\n    tuple_param = (quantite, type_id, centre_id, tournee_id)\r\n    sql = \"INSERT INTO Collecte( quantite_dechet_collecte, id_type_dechet, id_centre_collecte, id_tournee) VALUES ( %s, %s, %s, %s);\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n\r\n    return redirect('/collecte/show')\r\n\r\ndef get_name_by_id(mycursor, table, field, id):\r\n    sql = f\"SELECT {field} FROM {table} WHERE id_{table}=%s;\"\r\n    mycursor.execute(sql, (id,))\r\n    result = mycursor.fetchone()\r\n    return result[field] if result else ''\r\n\r\n@app.route('/collecte/edit', methods=['POST'])\r\ndef valid_edit_collecte():\r\n    print('''modification de la collecte dans le tableau''')\r\n    id = request.form.get('id')\r\n    quantite = request.form.get('quantite')\r\n    type_id = request.form.get('type')\r\n    centre_id = request.form.get('centre')\r\n    tournee_id = request.form.get('tournee')\r\n\r\n    mycursor = get_db().cursor()\r\n\r\n    centre_name = get_name_by_id(mycursor, 'Centre_collecte', 'lieu_collecte', centre_id)\r\n    type_name = get_name_by_id(mycursor, 'type_dechet', 'libelle_type_dechet', type_id)\r\n    tournee_date = get_name_by_id(mycursor, 'Tournee', 'date_tournee', tournee_id)\r\n    tournee_date_str = str(tournee_date)\r\n\r\n    message = u'quantite :' + quantite + ' - type : ' + type_name + ' - centre de collecte : ' + centre_name + ' - tournee : ' + tournee_date_str + ' - id : ' +str(id)\r\n    print(message)\r\n    flash(message, 'alert-success')\r\n\r\n    tuple_param = (quantite, type_id, centre_id, tournee_id, id)\r\n    sql = \"UPDATE Collecte SET quantite_dechet_collecte = %s, id_type_dechet= %s, id_centre_collecte= %s, id_tournee= %s WHERE id_collecte=%s;\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n\r\n    return redirect('/collecte/show')\r\n\r\ndef get_name_by_id(mycursor, table, field, id):\r\n    sql = f\"SELECT {field} FROM {table} WHERE id_{table}=%s;\"\r\n    mycursor.execute(sql, (id,))\r\n    result = mycursor.fetchone()\r\n    return result[field] if result else ''\r\n\r\n\r\n########TOURNEE########\r\n\r\n@app.route('/Tournee/show')\r\ndef show_Tournee():\r\n    mycursor = get_db().cursor()\r\n    sql = '''\r\n        SELECT t.id_tournee, t.date_tournee, t.id_centre_recyclage, c.lieu_recyclage, t.id_camion, t.temps, camion.immatriculation_camion\r\n        FROM Tournee t\r\n        INNER JOIN Centre_recyclage c ON t.id_centre_recyclage = c.id_centre_recyclage\r\n        INNER JOIN Camion camion ON t.id_camion = camion.id_camion\r\n        ORDER BY t.id_tournee;\r\n    '''\r\n    mycursor.execute(sql)\r\n    Tournee = mycursor.fetchall()\r\n\r\n    return render_template('Tournee/show_Tournee.html', Tournee=Tournee)\r\n\r\n\r\n\r\n\r\n@app.route('/Tournee/add', methods=['GET'])\r\ndef add_Tournee():\r\n    print('''affichage du formulaire pour saisir une Tournee''')\r\n    mycursor = get_db().cursor()\r\n    sql = '''Select * From Camion;'''\r\n    mycursor.execute(sql)\r\n    camions=mycursor.fetchall()\r\n    sql2 = '''Select * From Centre_recyclage;'''\r\n    mycursor.execute(sql2)\r\n    recyclages = mycursor.fetchall()\r\n    get_db().commit()\r\n\r\n    return render_template('Tournee/add_Tournee.html',camions=camions, recyclages=recyclages)\r\n\r\n\r\n@app.route('/Tournee/delete')\r\ndef delete_Tournee():\r\n    print('''Suppression d'une Tourn√©e''')\r\n    id_tournee = request.args.get('id')\r\n\r\n    if id_tournee:\r\n        try:\r\n            id_tournee = int(id_tournee)\r\n            mycursor = get_db().cursor()\r\n            tuple_param = (id_tournee,)\r\n            sql = \"DELETE FROM Tournee WHERE id_tournee=%s;\"\r\n            mycursor.execute(sql, tuple_param)\r\n            get_db().commit()\r\n\r\n            message = f'info: suppression d\\'une tournee avec - id_tournee =  {id_tournee}'\r\n            flash(message, 'alert-warning')\r\n        except ValueError:\r\n            print(\"L'ID de la tourn√©e n'est pas un entier valide.\")\r\n\r\n    return redirect('/Tournee/show')\r\n\r\n\r\n@app.route('/Tournee/edit', methods=['GET'])\r\ndef edit_Tournee():\r\n    print('''affichage du formulaire pour modifier une Tournee''')\r\n    print(request.args)\r\n    print(request.args.get('id'))\r\n    tournee_id = request.args.get('id')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_tournee, date_tournee, id_centre_recyclage, id_camion, temps\r\n             FROM Tournee\r\n             WHERE id_tournee=%s;'''\r\n    tuple_param = (tournee_id,)\r\n    mycursor.execute(sql, tuple_param)\r\n    Tournee = mycursor.fetchone()\r\n\r\n    sql_camions = '''Select * From Camion;'''\r\n    mycursor.execute(sql_camions)\r\n    camions = mycursor.fetchall()\r\n\r\n    sql_recyclages = '''Select * From Centre_recyclage;'''\r\n    mycursor.execute(sql_recyclages)\r\n    recyclages = mycursor.fetchall()\r\n\r\n    get_db().commit()\r\n\r\n    return render_template('Tournee/edit_Tournee.html', tournee=Tournee, camions=camions, recyclages=recyclages)\r\n\r\n\r\n@app.route('/Tournee/add', methods=['POST'])\r\ndef valid_add_Tournee():\r\n    print('''Ajout de la tourn√©e dans la table''')\r\n    date_tournee = request.form.get('date_tournee')\r\n    id_centre_recyclage = request.form.get('id_centre_recyclage')\r\n    id_camion = request.form.get('id_camion')\r\n    temps = request.form.get('temps')\r\n\r\n    message = (\r\n        f'info: Tourn√©e ajout√©e -  date: {date_tournee}, '\r\n        f'id_Centre_recyclage : {id_centre_recyclage}, id_Camion : {id_camion}, '\r\n        f'Temps : {temps}'\r\n    )\r\n\r\n\r\n\r\n    mycursor = get_db().cursor()\r\n    tuple_param = ( date_tournee, id_centre_recyclage, id_camion, temps)\r\n    sql = \"INSERT INTO Tournee( date_tournee, id_centre_recyclage, id_camion, temps) VALUES ( %s, %s, %s, %s);\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n\r\n    flash(message, 'alert-success')\r\n    return redirect('/Tournee/show')\r\n\r\n\r\n@app.route('/Tournee/edit', methods=['POST'])\r\ndef valid_edit_Tournee():\r\n    print('''Modification de la Tourn√©e dans le tableau''')\r\n    id_tournee = request.form.get('id_tournee')\r\n    date_tournee = request.form.get('date_tournee')\r\n    id_centre_recyclage = request.form.get('id_centre_recyclage')\r\n    id_camion = request.form.get('id_camion')\r\n    temps = request.form.get('temps')\r\n\r\n    message = (\r\n        f'info: Tourn√©e modifi√©e - id_tournee : {id_tournee}, date : {date_tournee}, '\r\n        f'id_Centre_recyclage : {id_centre_recyclage}, id_Camion : {id_camion}, '\r\n        f'Temps : {temps}'\r\n    )\r\n    flash(message, 'alert-success')\r\n\r\n    mycursor = get_db().cursor()\r\n    tuple_param = (id_tournee, date_tournee, id_centre_recyclage, id_camion, temps, id_tournee)\r\n    sql_update = '''UPDATE Tournee\r\n                    SET date_tournee = %s, id_centre_recyclage = %s, id_camion = %s, temps = %s\r\n                    WHERE id_tournee = %s;'''\r\n    tuple_params = (date_tournee, id_centre_recyclage, id_camion, temps, id_tournee)\r\n\r\n    mycursor.execute(sql_update, tuple_params)\r\n    get_db().commit()\r\n\r\n    return redirect('/Tournee/show')\r\n\r\n@app.route('/employe/show')\r\ndef show_employe():\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_employe, numero_telephone_employe, nom_employe, prenom_employe, salaire_employe, adresse_employe,id_camion\r\n    FROM Employe'''\r\n    mycursor.execute(sql)\r\n    employes= mycursor.fetchall()\r\n    return render_template('employe/show_employe.html', employes=employes)\r\n\r\n@app.route('/employe/add', methods=['GET'])\r\ndef add_employe():\r\n    print('''affichage du formulaire pour ajouter un employe''')\r\n    mycursor = get_db().cursor()\r\n    sql = '''Select * From Camion;'''\r\n    mycursor.execute(sql)\r\n    camions = mycursor.fetchall()\r\n    get_db().commit()\r\n\r\n    return render_template('employe/add_employe.html',camions=camions)\r\n\r\n\r\n@app.route('/employe/add', methods=['POST'])\r\ndef valid_add_employe():\r\n    numero_telephone_employe=request.form.get('numero_telephone_employe','')\r\n    nom_employe = request.form.get('nom_employe', '')\r\n    prenom_employe = request.form.get('prenom_employe', '')\r\n    salaire_employe= request.form.get('salaire_employe', '')\r\n    adresse_employe = request.form.get('adresse_employe', '')\r\n    id_camion = request.form.get('id_camion', '')\r\n    message = u'employe ajout√© , nom: '+nom_employe + ' - pr√©nom : ' + prenom_employe + ' - salaire_employe: ' + salaire_employe + ' - adresse_employe: '+ adresse_employe + ' - id_camion: ' + id_camion\r\n    print(message)\r\n    flash(message, 'alert-success')\r\n    mycursor = get_db().cursor()\r\n    tuple_param = (numero_telephone_employe, 'nom_employe', 'prenom_employe', 'salaire_employe', 'adresse_employe','id_camion')\r\n    sql = \"INSERT INTO Employe ( id_employe, `numero_telephone_employe`, 'nom_employe', 'prenom_employe', 'salaire_employe', 'adresse_employe','id_camion') VALUES (%s, %s, %s, %s, %s,%s,%s,%s);\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n    return redirect('/employe/show')\r\n\r\n\r\n@app.route('/employe/delete', methods=['GET'])\r\ndef delete_employe():\r\n    print(''' suppression d'un employe''')\r\n    id_employe = request.args.get('id_employe', None)\r\n    print(id_employe)\r\n    mycursor=get_db().cursor()\r\n    tuple_param = (id_employe,)\r\n    sql=\"DELETE FROM Employe WHERE id_employe=%s;\"\r\n    mycursor.execute(sql,tuple_param)\r\n    get_db().commit()\r\n    message  = f'info: suppression d\\'un employe avec - id_employe =  {id_employe}'\r\n    print(message)\r\n    flash(message, 'alert-warning')\r\n    return redirect('/employe/show')\r\n\r\n\r\n@app.route('/employe/edit', methods=['GET'])\r\ndef edit_employe():\r\n    print('''affichage du formulaire pour modifier un employe''')\r\n    print(request.args)\r\n    print(request.args.get('id'))\r\n    employe_id = request.args.get('id')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_employe, `numero_telephone_employe`, 'nom_employe', 'prenom_employe', 'salaire_employe', 'adresse_employe','id_camion'\r\n                FROM Employe\r\n                WHERE id_employe=%s;'''\r\n    tuple_param = (tournee_id,)\r\n    mycursor.execute(sql, tuple_param)\r\n    employe= mycursor.fetchone()\r\n\r\n    sql_camions = '''Select * From Camion;'''\r\n    mycursor.execute(sql_camions)\r\n    camions = mycursor.fetchall()\r\n\r\n    return render_template('employe/edit_employe.html', employe=employe,camions=camions)\r\n\r\n@app.route('/employe/edit', methods=['POST'])\r\ndef valid_edit_employe():\r\n    id_employe = request.args.get('id_employe', '')\r\n    numero_telephone_employe = request.args.get('numero_telephone_employe', '')\r\n    nom_employe = request.form.get('nom_employe', '')\r\n    prenom_employe = request.form.get('prenom_employe', '')\r\n    salaire_employe= request.form.get('salaire_employe', '')\r\n    adresse_employe = request.form.get('adresse_employe', '')\r\n    id_camion = request.form.get('id_camion', '')\r\n    message = u'employe ajout√© , numero_telephone: ' + numero_telephone_employe + 'nom: ' + nom_employe + ' - pr√©nom : ' + prenom_employe + ' - salaire_employe: ' + salaire_employe + ' - salaire_employe: ' + salaire_employe + ' - id_camion: ' + id_camion\r\n    print(message)\r\n    flash(message, 'alert-success')\r\n    mycursor = get_db().cursor()\r\n    tuple_param = (id_employe, numero_telephone_employe, 'nom_employe', 'prenom_employe', 'salaire_employe', 'adresse_employe','id_camion')\r\n    sql = \"UPDATE Employe SET id_employe = %s, numero_telephone_employe = %s, nom_employe= %s, prenom_employe = %s, salaire_employe = %s ,adresse_employe=%s,id_camion=%s WHERE id_employe = %s;\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n    return redirect('/employe/show')\r\n\r\n\r\n# - - - - - - - C O N T E N E U R - - - - - - -\r\n@app.route('/conteneur/show')\r\ndef show_conteneur():\r\n    mycursor = get_db().cursor()\r\n    sql = '''\r\n        SELECT\r\n            c.id_conteneur AS id,\r\n            cc.lieu_collecte AS collecte,\r\n            cc.id_centre_collecte AS idc,\r\n            td.libelle_type_dechet AS type,\r\n            td.id_type_dechet AS idtd,\r\n            cr.id_centre_recyclage AS idr,\r\n            cr.lieu_recyclage AS recyclage\r\n        FROM\r\n            Conteneur c\r\n            INNER JOIN Centre_recyclage cr ON c.id_centre_recyclage = cr.id_centre_recyclage\r\n            INNER JOIN type_dechet td ON c.id_type_dechet = td.id_type_dechet\r\n            INNER JOIN Centre_collecte cc ON c.id_centre_collecte = cc.id_centre_collecte\r\n        ORDER BY c.id_conteneur;\r\n    '''\r\n    mycursor.execute(sql)\r\n    conteneur = mycursor.fetchall()\r\n\r\n    return render_template('conteneur/show_conteneur.html', conteneur=conteneur)\r\n\r\n@app.route('/conteneur/delete')\r\ndef delete_conteneur():\r\n    print('''Suppression d'un conteneur''')\r\n    id_tournee = request.args.get('id')\r\n\r\n    if id_tournee:\r\n        try:\r\n            id_tournee = int(id_tournee)\r\n            mycursor = get_db().cursor()\r\n            tuple_param = (id_tournee,)\r\n            sql = \"DELETE FROM Tournee WHERE id_tournee=%s;\"\r\n            mycursor.execute(sql, tuple_param)\r\n            get_db().commit()\r\n\r\n            message = f'info: suppression d\\'un conteneur avec - id_conteneur =  {id_conteneur}'\r\n            flash(message, 'alert-warning')\r\n        except ValueError:\r\n            print(\"L'ID du conteneur n'est pas un entier valide.\")\r\n\r\n    return redirect('/conteneur/show')\r\n\r\n@app.route('/conteneur/add', methods=['GET'])\r\ndef add_conteneur():\r\n    print('''affichage du formulaire pour saisir un conteneur''')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT * FROM Centre_recyclage;'''\r\n    mycursor.execute(sql)\r\n    recyclages = mycursor.fetchall()\r\n    sql2 = '''SELECT * FROM type_dechet;'''\r\n    mycursor.execute(sql2)\r\n    types_dechet = mycursor.fetchall()\r\n    sql3 = '''SELECT * FROM Centre_collecte;'''\r\n    mycursor.execute(sql3)\r\n    centres_collecte = mycursor.fetchall()\r\n    get_db().commit()\r\n\r\n    return render_template('conteneur/add_conteneur.html', recyclages=recyclages, types_dechet=types_dechet, centres_collecte=centres_collecte)\r\n\r\n@app.route('/conteneur/add', methods=['POST'])\r\ndef valid_add_conteneur():\r\n    print('''Ajout du conteneur dans la table''')\r\n    id_centre_collecte = request.form.get('id_centre_collecte')\r\n    id_type_dechet = request.form.get('id_type_dechet')\r\n    id_centre_recyclage = request.form.get('id_centre_recyclage')\r\n\r\n    message = (\r\n        f'info: Conteneur ajout√© - id_centre_collecte : {id_centre_collecte}, '\r\n        f'id_type_dechet : {id_type_dechet}, id_centre_recyclage : {id_centre_recyclage}'\r\n    )\r\n\r\n    mycursor = get_db().cursor()\r\n    tuple_param = (id_centre_collecte, id_type_dechet, id_centre_recyclage)\r\n    sql = \"INSERT INTO Conteneur(id_centre_collecte, id_type_dechet, id_centre_recyclage) VALUES (%s, %s, %s);\"\r\n    mycursor.execute(sql, tuple_param)\r\n    get_db().commit()\r\n\r\n    flash(message, 'alert-success')\r\n    return redirect('/conteneur/show')\r\n\r\n\r\n@app.route('/conteneur/edit', methods=['GET'])\r\ndef edit_conteneur():\r\n    print('''affichage du formulaire pour modifier un conteneur''')\r\n    print(request.args)\r\n    print(request.args.get('id'))\r\n    tournee_id = request.args.get('id')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_tournee, date_tournee, id_centre_recyclage, id_camion, temps\r\n             FROM Tournee\r\n             WHERE id_tournee=%s;'''\r\n    tuple_param = (tournee_id,)\r\n    mycursor.execute(sql, tuple_param)\r\n    conteneur = mycursor.fetchone()\r\n\r\n    sql_camions = '''Select * From Camion;'''\r\n    mycursor.execute(sql_camions)\r\n    camions = mycursor.fetchall()\r\n\r\n    sql_recyclages = '''Select * From Centre_recyclage;'''\r\n    mycursor.execute(sql_recyclages)\r\n    recyclages = mycursor.fetchall()\r\n\r\n    get_db().commit()\r\n\r\n    return render_template('conteneur/edit_conteneur.html', conteneur=conteneur, camions=camions, recyclages=recyclages)\r\n\r\n@app.route('/conteneur/edit', methods=['POST'])\r\ndef valid_edit_conteneur():\r\n    print('''Modification du conteneur dans le tableau''')\r\n    id_tournee = request.form.get('id_tournee')\r\n    date_tournee = request.form.get('date_tournee')\r\n    id_centre_recyclage = request.form.get('id_centre_recyclage')\r\n    id_camion = request.form.get('id_camion')\r\n    temps = request.form.get('temps')\r\n\r\n    message = (\r\n        f'info: Conteneur modifi√© - id_tournee : {id_tournee}, date : {date_tournee}, '\r\n        f'id_Centre_recyclage : {id_centre_recyclage}, id_Camion : {id_camion}, '\r\n        f'Temps : {temps}'\r\n    )\r\n    flash(message, 'alert-success')\r\n\r\n    mycursor = get_db().cursor()\r\n    tuple_param = (id_tournee, date_tournee, id_centre_recyclage, id_camion, temps, id_tournee)\r\n    sql_update = '''UPDATE Tournee\r\n                    SET date_tournee = %s, id_centre_recyclage = %s, id_camion = %s, temps = %s\r\n                    WHERE id_tournee = %s;'''\r\n    tuple_params = (date_tournee, id_centre_recyclage, id_camion, temps, id_tournee)\r\n\r\n    mycursor.execute(sql_update, tuple_params)\r\n    get_db().commit()\r\n\r\n    return redirect('/conteneur/show')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	
+++ b/app.py	
@@ -199,6 +199,28 @@
     result = mycursor.fetchone()
     return result[field] if result else ''
 
+@app.route('/collecte/etat', methods=['GET'])
+def etat_collecte():
+    mycursor = get_db().cursor()
+    sql = '''SELECT id_collecte AS id, id_type_dechet AS type, quantite_dechet_collecte AS quantite, id_centre_collecte AS centre, id_tournee AS tournee
+             FROM Collecte
+             WHERE id_collecte=%s;'''
+    mycursor.execute(sql)
+    Collecte = mycursor.fetchall()
+    sql = ''' SELECT lieu_collecte AS lieu , id_centre_collecte as id
+              FROM Centre_collecte'''
+    mycursor.execute(sql)
+    Centre_collecte = mycursor.fetchall()
+    sql = ''' SELECT libelle_type_dechet AS libelle , id_type_dechet as id
+              FROM type_dechet'''
+    mycursor.execute(sql)
+    type_dechet = mycursor.fetchall()
+
+    sql = ''' SELECT date_tournee AS date , id_tournee as id
+              FROM Tournee'''
+    mycursor.execute(sql)
+    Tournee = mycursor.fetchall()
+    return render_template('collecte/show_collecte.html', collecte=Collecte , centreCollect=Centre_collecte, typeDechet=type_dechet, tournee= Tournee)
 
 ########TOURNEE########
 
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"dataSourceStorageLocal\" created-in=\"PY-232.10072.31\">\r\n    <data-source name=\"BDD_mrose@localhost\" uuid=\"428fffdc-9720-4de5-8bfe-8b0b496cc107\">\r\n      <database-info product=\"\" version=\"\" jdbc-version=\"\" driver-name=\"\" driver-version=\"\" dbms=\"MYSQL\" exact-version=\"0\" />\r\n      <schema-mapping />\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	
+++ b/.idea/dataSources.local.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="PY-232.10072.31">
+  <component name="dataSourceStorageLocal" created-in="PY-232.10227.11">
     <data-source name="BDD_mrose@localhost" uuid="428fffdc-9720-4de5-8bfe-8b0b496cc107">
       <database-info product="" version="" jdbc-version="" driver-name="" driver-version="" dbms="MYSQL" exact-version="0" />
       <schema-mapping />
